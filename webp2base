#!/bin/bash
#title          :webp2base
#description    :convert animated webp to gif/jpeg
#date           :20200504
#usage          :webp2base input.webp
#outputs        :input.webp.gif or input.webp.jpg
#==============================================================================
cur_dir=$(pwd)
webpfile=$1
echo $webpfile
animated="$(webpmux -info $1 2>/dev/null | grep animation | wc -l)"
if [[ $animated == "1" ]];then
	webpfileinfo="$(webpmux -info $webpfile)"
	temp_dir=$(mktemp -d)
	cd $temp_dir
	if [[ ! -f $webpfile ]];then
	    webpfile=$cur_dir/$webpfile
	fi
	frames_num=$(echo "$webpfileinfo"|sed -n 's/Number of frames: //p')
	table_line=$(echo "$webpfileinfo"|grep -nh  "No.: width.*"|cut -d : -f 1)
	for i in $(seq 1 $frames_num);do
	    webpmux -get frame $i $webpfile -o "$i.webp"
	    width=$(echo "$webpfileinfo"|awk -v cur_line="$((table_line+i))" '{if(NR==cur_line) print $2}')
	    offset_x=$(echo "$webpfileinfo"|awk -v cur_line="$((table_line+i))" '{if(NR==cur_line) print $5}')
	    new_width=$((width+offset_x))
	    height=$(echo "$webpfileinfo"|awk -v cur_line="$((table_line+i))" '{if(NR==cur_line) print $3}')
	    offset_y=$(echo "$webpfileinfo"|awk -v cur_line="$((table_line+i))" '{if(NR==cur_line) print $6}')
	    new_height=$((height+offset_y))
	    dwebp "$i.webp" -o "$i.png"
	    convert -gravity southeast -extent ${new_width}x${new_height} -background none "$i.png" "$i.png"
	done
	rename 's/(\d+)/sprintf("%03d",$1)/e' *.png
	echo "converting all png frame file to gif..."
	convert -delay 0 -loop 0 *.png animation.gif
	mv $temp_dir/animation.gif $webpfile".gif"
	rm -rf $temp_dir
else
	convert "$webpfile" -quality 80% $cur_dir/$webpfile".jpg"
fi
echo "finished with success!"
